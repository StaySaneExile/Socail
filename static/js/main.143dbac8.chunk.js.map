{"version":3,"sources":["assets/images/user.png","assets/images/preloader.gif","Profile/MyPosts/Post/Post01.module.css","Nav/Dialogs/Dialogs.module.css","Nav/Nav.module.css","Profile/Profile.module.css","serviceWorker.js","Nav/Nav.jsx","Nav/News/News.jsx","Nav/Music/Music.jsx","Nav/Settings/Settings.jsx","Redux/Dialog-reducer.js","Nav/Dialogs/DialogItem/DialogsItem.jsx","Nav/Dialogs/Message/Message.jsx","Common/FormsControls/FormsControls.js","utils/validators/validators.js","Nav/Dialogs/MessageForm.jsx","Nav/Dialogs/Dialogs.jsx","HOC/AuthRedirect.js","Nav/Dialogs/DialogsContainer.jsx","api/api.js","Redux/Users-reducer.js","Nav/Users/Users.jsx","Common/Preloader/Preloader.js","Redux/Users-selector.js","Nav/Users/UsersContainer.jsx","Profile/ProfileStatus.jsx","Profile/ProfileInfo.jsx","Redux/Profile-reducer.js","Profile/MyPosts/Post/Post01.jsx","Profile/MyPosts/MyPostsFormRedux.jsx","Profile/MyPosts/MyPosts.jsx","Profile/MyPosts/MyPostsContainer.jsx","Profile/Profile.jsx","Profile/ProfileContainer.jsx","head/Header.jsx","Redux/auth-reducer.js","head/HeaderContainer.jsx","Nav/Login/LoginForm.jsx","Nav/Login/Login.jsx","Redux/App-reducer.js","App.js","Redux/Nav-reducer.js","Redux/Redux-store.js","index.js","Common/FormsControls/FormsControls.module.css","Profile/ProfileInfo.module.css","Nav/Friends/Friend.module.css","Nav/Friends/Friends.module.css","Nav/Users/Users.module.css","Profile/MyPosts/MyPosts.module.css","head/Header.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","Nav","props","className","classes","nav","item","to","activeClassName","active","News","Music","Settings","initialState","messages","id","message","dialogs","name","newTextMessage","newNameMessage","dialogReducer","state","action","type","text","newMessageText","DialogItem","path","s","dialog","Message","FormControl","input","meta","child","error","touched","styles","formControl","children","InputLogin","resTprops","TextArea","requiredField","value","maxLengthCreator","maxLength","length","maxLength50","MessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","validate","placeholder","Dialogs","dialogsPage","dialogItem","map","messageItem","dialogsItems","values","onClickMessage","newMessageBody","mapStateToPropsForRed","isAuth","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React","instance","axios","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","then","response","data","userId","post","delete","profileAPI","getProfile","getStatus","updateStatus","status","put","authAPI","email","password","rememberMe","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unFollowSuccess","setCurrentPage","setFetching","toggleFollowing","usersReducer","u","followed","count","filter","Users","pagesCount","Math","ceil","pages","i","push","p","onClick","onPageChanged","selectedPage","key","src","photos","small","userPhoto","photoUrl","alt","disabled","some","unFollow","follow","Preloader","preloader","getUsersSelector","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","getUsers","Id","resultCode","items","totalCount","ProfileStatus","editMode","changeStatus","e","setState","currentTarget","editModeON","editModeOFF","prevProps","prevState","autoFocus","onBlur","onChange","profileStatus","ProfileInfo","profile","descriptionBlock","large","postData","likesCount","setStatus","profileReducer","newPost","postText","newPostText","Post","PostFormRedux","MyPosts","messDrow","posts","myPost","addPost","MyPostsContainer","profilePage","addPostActionCreator","Profile","store","ProfileContainer","params","authorisedUserId","history","getUsersProfile","withRouter","Header","header","login_block","login","logout","setUserData","payload","getUserData","authReducer","HeaderContainer","maxLength15","ReduxLoginForm","formSummaryError","stopSubmit","_error","formData","initialized","AppReducer","App","initializeApp","wrapperContent","render","DialogsContainer","app","navData","class","friend","image","navReducer","reducers","combineReducers","formReducer","createStore","applyMiddleware","thunkMiddleware","ReactDOM","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.143dbac8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.d38be7c1.png\";","module.exports = __webpack_public_path__ + \"static/media/preloader.a4450bda.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post01_item__DMW6W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperContent\":\"Dialogs_wrapperContent__2Zdg-\",\"dialogs\":\"Dialogs_dialogs__2nmu-\",\"dialogsItems\":\"Dialogs_dialogsItems__1N7ch\",\"active\":\"Dialogs_active__21Yal\",\"dialog\":\"Dialogs_dialog__1sly8\",\"messages\":\"Dialogs_messages__1B2DM\",\"message\":\"Dialogs_message__3dA6p\",\"area\":\"Dialogs_area__3k6Ql\",\"send\":\"Dialogs_send__uLN2z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__3MU8q\",\"item\":\"Nav_item__2lQ17\",\"active\":\"Nav_active__3P5eQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__22Z-U\",\"item\":\"Profile_item__WHTLm\",\"posts\":\"Profile_posts__AUXpR\",\"image\":\"Profile_image__1obOe\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport classes from \"./Nav.module.css\"\r\nimport NavItem from \"./NavItem\";\r\nimport Friends from \"./Friends/Friends\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Nav = (props) => {\r\n\r\n    return (\r\n\r\n            <nav className={classes.nav}>\r\n                <div className={classes.item}>\r\n                    <div>\r\n                        <NavLink to='/profile' activeClassName={classes.active}>profile</NavLink>\r\n                    </div>\r\n                    <div>\r\n                        <NavLink to='/dialogs' activeClassName={classes.active}>dialogs</NavLink>\r\n                    </div>\r\n                    <div>\r\n                        <NavLink to='/users' activeClassName={classes.active}>users</NavLink>\r\n                    </div>\r\n                    <div>\r\n                        <NavLink to='/news' activeClassName={classes.active}>news</NavLink>\r\n                    </div>\r\n                    <div>\r\n                        <NavLink to='/music' activeClassName={classes.active}>music</NavLink>\r\n                    </div>\r\n                    <div>\r\n                        <NavLink to='/settings' activeClassName={classes.active}>settings</NavLink>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n    )\r\n}\r\n\r\nexport default Nav;","import React from \"react\";\r\nimport classes from \"./News.module.css\";\r\n\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default News;","import React from \"react\";\r\nimport classes from \"./Music.module.css\";\r\n\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div>\r\n            <a>Music</a>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Music;","import React from \"react\";\r\nimport classes from \"./Settings.module.css\";\r\n\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;","const SEND_MESSAGE = 'SEND-MESSAGE'\r\n\r\nlet initialState = {\r\n    messages: [\r\n        {id: 0, message: 'Hi'},\r\n        {id: 1, message: 'How r u?'},\r\n        {id: 2, message: 'Ayayay'},\r\n        {id: 3, message: 'hello'}\r\n    ],\r\n    dialogs: [\r\n        {name: 'Polina', id: 1},\r\n        {name: 'Oksana', id: 2},\r\n        {name: 'Misha', id: 3},\r\n        {name: 'Fedya', id: 4}\r\n    ],\r\n    newTextMessage: '',\r\n    newNameMessage: 'Serg'\r\n}\r\n\r\nconst dialogReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let text = action.newMessageText;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {message: text}]\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const sendMessageCreator = (newMessageText) => ({type: SEND_MESSAGE, newMessageText})\r\n\r\n\r\nexport default dialogReducer;","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\n\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.dialog}>{props.message}</div>\r\n    );\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport styles from './FormsControls.module.css'\r\n\r\n\r\n\r\nconst FormControl = ({input, meta,child, ...props}) => {\r\n    const error = meta.touched && meta.error;\r\n    return(\r\n        <div className={styles.formControl + ' ' + (error ? styles.error: \"\")}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            {error && <span>{meta.error}</span> }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst TextArea = (props) => {\r\n    const {input, meta,child, ...resTprops} = props\r\n    return(\r\n        <FormControl {...props}><textarea {...input} {...resTprops} /></FormControl>\r\n    )\r\n}\r\n\r\n\r\nexport const InputLogin = (props) => {\r\n    const {input, meta,child, ...resTprops} = props\r\n    return(\r\n        <FormControl {...props}><input {...input} {...resTprops} /></FormControl>\r\n    )\r\n}\r\n\r\nexport default TextArea;","export const requiredField = (value) => {\r\n    if(value) return undefined\r\n    return 'Required field';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if(value.length > maxLength) return `max length ${maxLength} symbols`\r\n    return undefined;\r\n}","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport TextArea from \"../../Common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, requiredField} from \"../../utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\nconst MessageForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={TextArea}\r\n                       validate={[requiredField, maxLength50]}\r\n                       name={'newMessageBody'}\r\n                       placeholder='Enter your message' />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst MessageFormRedux = reduxForm({form: 'addMessageForm'})(MessageForm)\r\n\r\nexport default MessageFormRedux;","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogsItem\";\r\nimport Message from \"./Message/Message\";\r\nimport MessageFormRedux from \"./MessageForm\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogItem = state.dialogs.map(dialog => (<DialogItem name={dialog.name} id={dialog.id}/>));\r\n    let messageItem = state.messages.map(message => (<Message message={message.message}/>));\r\n    let newMessageText = state.newTextMessage;\r\n\r\n    let addNewMessageText = (values) => {\r\n        props.onClickMessage(values.newMessageBody)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogItem}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messageItem}</div>\r\n                <MessageFormRedux onSubmit={addNewMessageText}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRed = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'} />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    let AuthRedirectComponent = connect (mapStateToPropsForRed) (RedirectComponent)\r\n    return AuthRedirectComponent\r\n}","import React from \"react\";\r\nimport {sendMessageCreator} from \"../../Redux/Dialog-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../HOC/AuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapState = (state) => {\r\n    return {\r\n       dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nlet mapDispatch = (dispatch) => {\r\n    return {\r\n        onClickMessage: (newMessageText)=> {\r\n            dispatch(sendMessageCreator(newMessageText))}\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect (mapState, mapDispatch),\r\n    withAuthRedirect\r\n) (Dialogs)","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create ({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY' : '55c7683d-910d-4237-970d-b8f19c995706'\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers (currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage} &count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n    follow(userId) {\r\n       return  instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n       return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile (userId) {\r\n        return profileAPI.getProfile(userId)\r\n    }\r\n}\r\nexport const profileAPI = {\r\n    getProfile (userId) {\r\n        return instance.get(`profile/`+ userId)\r\n    },\r\n    getStatus (userId) {\r\n        return instance.get(`profile/status/`+ userId)\r\n    },\r\n    updateStatus (status) {\r\n        return instance.put(`profile/status/`, {status: status})\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me () {\r\n      return instance.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout(email, password, rememberMe = false) {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n}\r\n","import {usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UN_FOLLOW = 'UN-FOLLOW';\r\nconst SET_USERS = 'SET-USERS';\r\nconst SET_CURRENT_PAGE = 'CURRENT-PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_FETCHING = 'TOGGLE_FETCHING';\r\nconst TOGGLE_FOLLOWING_PROGRESS = 'TOGGLE_FOLLOWING_PROGRESS';\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 2,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UN_FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.followingInProgress\r\n                    ? [...state.followingInProgress, action.userId]\r\n            : state.followingInProgress.filter(id => id !== action.userId)}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n    };\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unFollowSuccess = (userId) => ({type: UN_FOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const setFetching = (isFetching) => ({type: TOGGLE_FETCHING, isFetching})\r\nexport const toggleFollowing = (followingInProgress, userId) => ({type: TOGGLE_FOLLOWING_PROGRESS, followingInProgress, userId})\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n   return (dispatch) => {\r\n    dispatch(setFetching(true));\r\n    dispatch(setCurrentPage(currentPage));\r\n    usersAPI.getUsers(currentPage, pageSize)\r\n        .then(data => {\r\n            dispatch(setFetching(false))\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersCount(data.totalCount));\r\n        })\r\n}}\r\n\r\nexport const follow = (Id) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowing(true, Id))\r\n        usersAPI.follow(Id)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                   dispatch(followSuccess(Id))\r\n                }\r\n                dispatch(toggleFollowing(false, Id))\r\n            });\r\n    }}\r\nexport const unFollow = (Id) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowing(true, Id))\r\n        usersAPI.unfollow(Id)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(unFollowSuccess(Id))\r\n                }\r\n                dispatch(toggleFollowing(false, Id))\r\n            });\r\n    }}\r\nexport default usersReducer;","import React from \"react\";\r\nimport styles from \"./Users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nlet Users = (props) => {\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n    let pages = [];\r\n    for (let i = 0; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    return <div>\r\n        <div>\r\n            {pages.map(p => {\r\n                return <span onClick={() => {\r\n                    props.onPageChanged(p)\r\n                }} className={props.currentPage === p && styles.selectedPage}>{p}</span>\r\n            })}\r\n        </div>\r\n        {props.users.map(u =>\r\n            <div key={u.id}>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + u.id}>\r\n                            <img src={u.photos.small != null ? u.photos.small : userPhoto} className={styles.photoUrl} alt=''/>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {u.followed\r\n                            ?\r\n                            <button disabled={props.followingInProgress.some(id=>id === u.id)}\r\n                                    onClick={() => {props.unFollow(u.id)}}>Unfollow</button>\r\n                            :\r\n                            <button disabled={props.followingInProgress.some(id=>id === u.id)}\r\n                                    onClick={() => {props.follow(u.id)}}>Follow</button>\r\n                        }\r\n                    </div>\r\n                </span>\r\n                <span>\r\n                    <span>\r\n                        <div>{u.name}</div>\r\n                        <div>{u.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{'u.location.country'}</div>\r\n                        <div>{'u.location.city'}</div>\r\n                    </span>\r\n                </span>\r\n            </div>)}\r\n    </div>\r\n\r\n}\r\n\r\nexport default Users;","import preloader from \"../../assets/images/preloader.gif\";\r\nimport React from \"react\";\r\n\r\nlet Preloader = (props) => {\r\n    return <div>\r\n        <img src={preloader}/>\r\n    </div>\r\n}\r\nexport default Preloader","import {createSelector} from \"reselect\";\r\n\r\n\r\n\r\n\r\n\r\nconst getUsersState = (state) => {\r\n    return state.usersPage.users\r\n}\r\nexport const getUsersSelector = createSelector(getUsersState, (users)=> {\r\n    return users.filter( u => true)\r\n})\r\n\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow, followSuccess, getUsers,\r\n    setCurrentPage,\r\n    toggleFollowing, unFollow, unFollowSuccess\r\n}\r\nfrom \"../../Redux/Users-reducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsersSelector\r\n} from \"../../Redux/Users-selector\";\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ?\r\n                <Preloader/>  : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unFollow={this.props.unFollow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n/*\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress\r\n\r\n    }\r\n}\r\n*/\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersSelector(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default  compose (\r\n    connect(mapStateToProps, {\r\n        follow,\r\n        unFollow,\r\n        getUsers,\r\n        unFollowSuccess,\r\n        followSuccess,\r\n        setCurrentPage,\r\n        toggleFollowing})\r\n)(UsersContainer)","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    changeStatus = (e) => {\r\n        this.setState({status: e.currentTarget.value})\r\n    }\r\n\r\n    editModeON = () => {\r\n        this.setState({editMode: true})\r\n    }\r\n\r\n    editModeOFF = () => {\r\n        this.setState({editMode: false})\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status){\r\n        this.setState({\r\n            status: this.props.status\r\n        })}\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.state.editMode\r\n                    ?\r\n                    <div>\r\n                        <input autoFocus={true}\r\n                               onBlur={this.editModeOFF}\r\n                               onChange={this.changeStatus}\r\n                               value={this.state.status}/>\r\n                    </div>\r\n                    :\r\n                    <div className={s.profileStatus}>\r\n                        <span onClick={this.editModeON}>{this.props.status || 'your status'}</span>\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if(!props.profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div className={s.profile}>\r\n            {/*<div >\r\n                <img src=\"https://www.exler.ru/films/images/10-03-2011/big/screen00002.jpg\"/>\r\n            </div>*/}\r\n            <div className={s.descriptionBlock}>\r\n                <img src ={props.profile.photos.large} />\r\n                <ProfileStatus updateStatus={props.updateStatus}\r\n                               status={props.status}  />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileInfo;","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST'\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\r\nconst SET_STATUS = 'SET_STATUS'\r\n\r\nlet initialState = {\r\n\r\n        postData: [\r\n            {message: 'Hello', id: 1, likesCount: '12'},\r\n            {message: 'where r u?', id: 2, likesCount: '456'},\r\n            {message: 'call me', id: 3, likesCount: '87'}\r\n\r\n        ],\r\n        profile: null,\r\n    status: ''\r\n\r\n}\r\n\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST :\r\n            let newPost = {\r\n                message: action.postText,\r\n                id: 7,\r\n                likesCount: 0\r\n            }\r\n            return {\r\n                ...state,\r\n                postData: [...state.postData, newPost],\r\n                newPostText: ''\r\n            }\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state, profile: action.profile\r\n            }\r\n        case SET_STATUS:\r\n            return {\r\n                ...state, status: action.status\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const addPostActionCreator = (postText) => ({type: ADD_POST, postText})\r\nexport const setUsersProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\n\r\n\r\nexport const getStatus = (userId) => (dispatch) => {\r\n    profileAPI.getStatus(userId)\r\n        .then(response => {\r\n            dispatch(setStatus(response.data))\r\n        })}\r\n\r\nexport const updateStatus = (status) => (dispatch) => {\r\n    profileAPI.updateStatus(status)\r\n        .then(response => {\r\n            if(response.data.resultCode === 0) {\r\n            dispatch(setStatus(status))}\r\n        })}\r\n\r\nexport const getUsersProfile = (userId) => (dispatch) => {\r\n    usersAPI.getProfile(userId)\r\n        .then(response => {\r\n            dispatch(setUsersProfile(response.data))\r\n})}\r\n\r\nexport default profileReducer;","import React from \"react\";\r\nimport classes from \"./Post01.module.css\"\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={classes.item}>\r\n            <img src=\"https://www.nicepng.com/png/detail/306-3061316_the-new-vp-logofluff-virtus-pro-dota-2.png\"/>\r\n            {props.message}\r\n            <div>\r\n                <span>like</span> {props.likesCount}\r\n            </div>\r\n            < /div>\r\n\r\n\r\n                );\r\n                }\r\n\r\n                export default Post;","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, requiredField} from \"../../utils/validators/validators\";\r\nimport TextArea from \"../../Common/FormsControls/FormsControls\";\r\n\r\nconst maxLength = maxLengthCreator(10);\r\n\r\nlet MyPostsFormRedux = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <div>\r\n                    <Field name={'postText'}\r\n                           component={TextArea}\r\n                           validate={[requiredField, maxLength]}/>\r\n                </div>\r\n                <div>\r\n                    <button>Add post</button>\r\n                </div>\r\n                <button>Remove</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst PostFormRedux = reduxForm({form: 'addPostForm'})(MyPostsFormRedux)\r\nexport default PostFormRedux;","import React from \"react\";\r\nimport classes from \"./MyPosts.module.css\"\r\nimport Post from \"./Post/Post01\"\r\nimport PostFormRedux from \"./MyPostsFormRedux\";\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    let messDrow = props.posts.map(post => (<Post message={post.message}\r\n                                                  likesCount={post.likesCount}\r\n                                                  id={post.id}/>));\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.postText)\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={classes.myPost}>\r\n            <h3>My post</h3>\r\n            <PostFormRedux onSubmit={onAddPost} />\r\n            <div className={classes.posts}>\r\n                {messDrow}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostActionCreator} from \"../../Redux/Profile-reducer\";\r\nimport MyPosts from './MyPosts'\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.postData,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (postText)=> {\r\n            dispatch(addPostActionCreator(postText))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst MyPostsContainer = connect (mapStateToProps, mapDispatchToProps) (MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport classes from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo\"\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo updateStatus={props.updateStatus}\r\n                         status={props.status}\r\n                         profile={props.profile}/>\r\n            <MyPostsContainer store={props.store}  />\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUsersProfile,  updateStatus} from \"../Redux/Profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorisedUserId\r\n            if(!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getUsersProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     updateStatus={this.props.updateStatus}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}/>);\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorisedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUsersProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    /*withAuthRedirect*/\r\n)(ProfileContainer)","import React from \"react\";\r\nimport classes from \"./Header.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Header = (props) => {\r\n    return (\r\n            < header\r\n                className = {classes.header} >\r\n                < img src = \"https://cdnb.artstation.com/p/assets/images/images/021/280/227/large/wladimir-kovalenko-screenshot000.jpg?1571080099\" />\r\n                <div className={classes.login_block}>\r\n                    {props.isAuth\r\n                        ? <div>{props.login} - <button onClick={props.logout}>Logout</button></div>\r\n                        :<NavLink to={'/login'}>Login</NavLink>\r\n                    }\r\n                </div>\r\n\r\n            </header>\r\n    );\r\n}\r\n\r\n\r\nexport default Header;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA'\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    isFetching: false\r\n}\r\n\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setUserData = (userId, email, login, isAuth) => ({type: SET_USER_DATA, payload: {userId, email, login, isAuth}})\r\nexport const getUserData = () => (dispatch)=> {\r\n    return authAPI.me()\r\n        .then(response => {\r\n            if(response.data.resultCode === 0) {\r\n                let {id, email, login} = response.data.data\r\n                dispatch(setUserData(id, email, login, true))\r\n            }\r\n        });\r\n}\r\nexport const login = (email, password, rememberMe) => (dispatch)=> {\r\n\r\n    authAPI.login(email, password, rememberMe)\r\n        .then(response => {\r\n            if(response.data.resultCode === 0) {\r\n                dispatch(getUserData())\r\n            } else {\r\n                let messages = response.data.messages.length > 0 ? response.data.messages[0] : ' error'\r\n                dispatch(stopSubmit('login',{_error: messages}))\r\n            }\r\n        });\r\n}\r\nexport const logout = () => (dispatch)=> {\r\n    return authAPI.logout()\r\n        .then(response => {\r\n            if(response.data.resultCode === 0) {\r\n                dispatch(setUserData(null, null, null, false))\r\n            }\r\n        });\r\n}\r\n    export default authReducer","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport * as axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserData, logout} from \"../Redux/auth-reducer\";\r\nimport {authAPI} from \"../api/api\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getUserData()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props} />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\n\r\nexport default connect (mapStateToProps, {getUserData, logout}) (HeaderContainer);","import React from 'react';\r\nimport styles from './../../Common/FormsControls/FormsControls.module.css'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {InputLogin} from \"../../Common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, requiredField} from \"../../utils/validators/validators\";\r\n\r\nconst maxLength15 = maxLengthCreator(30)\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field validate={[requiredField, maxLength15]} placeholder={'email'} name={'email'} component={InputLogin}/>\r\n            </div>\r\n            <div>\r\n                <Field validate={[requiredField, maxLength15]} type={'password'} placeholder={'password'} name={'password'} component={InputLogin}/>\r\n            </div>\r\n            <div>\r\n                <Field type={'checkbox'} name={'rememberMe'} component={InputLogin}/>remember me\r\n            </div>\r\n            { props.error && <div className={styles.formSummaryError}>\r\n                {props.error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst ReduxLoginForm = reduxForm ({\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\nexport default ReduxLoginForm;","import React from 'react';\r\nimport ReduxLoginForm from \"./LoginForm\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../Redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n    if(props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n    return (\r\n\r\n        <div>\r\n            <h1>Login</h1>\r\n            <ReduxLoginForm error={props.error} onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport default connect (mapStateToProps, {login})(Login);","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {getUserData} from \"./auth-reducer\";\r\n\r\nconst SET_INITIALIZED = 'SET_INITIALIZED'\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\n\r\nconst AppReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_INITIALIZED:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initializingSuccess = () => ({type: SET_INITIALIZED})\r\nexport const initializeApp = () => (dispatch) => {\r\n   let promise = dispatch(getUserData())\r\n    promise.then(()=> {\r\n        dispatch(initializingSuccess())\r\n    })\r\n\r\n}\r\n\r\n\r\nexport default AppReducer","import React, {Profiler} from 'react';\nimport './App.css';\nimport Nav from \"./Nav/Nav\"\nimport classes from \"./Nav/Dialogs/Dialogs.module.css\";\nimport {Route, withRouter} from \"react-router-dom\";\nimport News from \"./Nav/News/News\"\nimport Music from \"./Nav/Music/Music\";\nimport Settings from \"./Nav/Settings/Settings\";\nimport DialogsContainer from \"./Nav/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./Nav/Users/UsersContainer\";\nimport ProfileContainer from \"./Profile/ProfileContainer\";\nimport HeaderContainer from \"./head/HeaderContainer\";\nimport Login from \"./Nav/Login/Login\";\nimport {connect} from \"react-redux\";\nimport {getUserData, logout} from \"./Redux/auth-reducer\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./Redux/App-reducer\";\nimport Preloader from \"./Common/Preloader/Preloader\";\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp()\n    }\n    render() {\n\n        if (!this.props.initialized) {\n           return <Preloader />\n        }\n\n        return (\n            <div className=\"wrapper\">\n                <HeaderContainer/>\n                <Nav/>\n                <div className={classes.wrapperContent}>\n                    <Route path='/login' render={() => <Login/>}/>\n                    <Route path='/dialogs' render={() => <DialogsContainer/>}/>\n                    <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\n                    <Route path='/users' render={() => <UsersContainer/>}/>\n                    <Route path='/news' render={() => <News/>}/>\n                    <Route path='/music' render={() => <Music/>}/>\n                    <Route path='/settings' render={() => <Settings/>}/>\n\n                </div>\n            </div>\n\n\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nexport default compose (\n    withRouter,\n    connect (mapStateToProps, {initializeApp}))\n(App);\n","let initialState = {\r\n    navData: [\r\n        {p: '/profile', class: 'classes.active', text: 'Profile'},\r\n        {p: '/dialogs', class: 'classes.active', text: 'Messages'},\r\n        {p: '/news', class: 'classes.active', text: 'News'},\r\n        {p: '/music', class: 'classes.active', text: 'Music'},\r\n        {p: '/settings', class: 'classes.active', text: 'Settings'}\r\n    ],\r\n    friend: [\r\n        {name: ' Sasha', image: 'https://i.pinimg.com/originals/de/c0/5c/dec05c95bbb01637d923c964367ab854.jpg'},\r\n        {name: ' Petya', image: 'https://pristor.ru/wp-content/uploads/2018/11/%D0%9F%D1%80%D0%B8%D0%BA%D0%BE%D0%BB%D1%8C%D0%BD%D1%8B%D0%B5-%D0%B8-%D0%BA%D0%BB%D0%B0%D1%81%D1%81%D0%BD%D1%8B%D0%B5-%D0%BA%D0%B0%D1%80%D1%82%D0%B8%D0%BD%D0%BA%D0%B8-%D1%84%D0%BE%D1%82%D0%BE-Supreme-%D0%BD%D0%B0-%D0%B0%D0%B2%D1%83-%D0%BF%D0%BE%D0%B4%D0%B1%D0%BE%D1%80%D0%BA%D0%B0-1.jpg'},\r\n        {name: ' Gadjimurad', image: 'https://i1.wp.com/funpick.ru/wp-content/uploads/2018/02/ava-3.jpg?w=600'}\r\n    ]\r\n}\r\n\r\nconst navReducer = (state = initialState, action) => {\r\n\r\n    return state\r\n}\r\nexport default navReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./Profile-reducer\";\r\nimport dialogReducer from \"./Dialog-reducer\";\r\nimport navReducer from \"./Nav-reducer\";\r\nimport usersReducer from \"./Users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport AppReducer from \"./App-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogReducer,\r\n    nav: navReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: AppReducer\r\n})\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\nwindow.store = store\r\nexport default store;","import * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\nimport store from \"./Redux/Redux-store\";\nimport {Provider} from \"react-redux\";\n\n\n\n\n\n    ReactDOM.render(\n        <HashRouter basename={process.env.PUBLIC_URL}>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </HashRouter>,\n        document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-control\":\"FormsControls_form-control__1rrfy\",\"formControl\":\"FormsControls_formControl__jRyxA\",\"error\":\"FormsControls_error__1K5AI\",\"formSummaryError\":\"FormsControls_formSummaryError__1v61V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__AtYjs\",\"profile\":\"ProfileInfo_profile__2_3SG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"Friend_friend__1KliV\",\"name\":\"Friend_name__J3mgY\",\"img\":\"Friend_img__93l9Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Friends_main__11Lj_\",\"h\":\"Friends_h__3imJ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photoUrl\":\"Users_photoUrl__JGSqI\",\"selectedPage\":\"Users_selectedPage__3cWm-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"MyPosts_content__kQILA\",\"item\":\"MyPosts_item__uLkCY\",\"posts\":\"MyPosts_posts__b1Lvl\",\"image\":\"MyPosts_image__1fbNo\",\"myPost\":\"MyPosts_myPost__3I43d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3Glqy\",\"login_block\":\"Header_login_block__1k8a6\"};"],"sourceRoot":""}